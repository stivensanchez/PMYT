{"changed":false,"filter":false,"title":"nivelations_controller.rb","tooltip":"/app/controllers/nivelations_controller.rb","value":"class NivelationsController < ApplicationController\n  before_action :set_nivelation, only: [:show, :edit, :update, :destroy, :index, :new, :create]\n\n  # GET /nivelations\n  # GET /nivelations.json\n  def index\n    @nivelations = @oper.nivelations.all\n  end\n\n  # GET /nivelations/1\n  # GET /nivelations/1.json\n  def show\n  end\n\n  # GET /nivelations/new\n  def new\n    @nivelation = Nivelation.new\n  end\n\n  # GET /nivelations/1/edit\n  def edit\n  end\n\n  # POST /nivelations\n  # POST /nivelations.json\n  def create\n    @nivelation = Nivelation.new(nivelation_params)\n    @nivelation.oper_id = @oper.id\n    respond_to do |format|\n      if @nivelation.save\n        format.html { redirect_to  oper_nivelations_path(@oper), notice: 'Nivelation was successfully created.' }\n        format.json { render :show, status: :created, location: @nivelation }\n      else\n        format.html { render :new }\n        format.json { render json: @nivelation.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PATCH/PUT /nivelations/1\n  # PATCH/PUT /nivelations/1.json\n  def update\n    respond_to do |format|\n      if @nivelation.update(nivelation_params)\n        format.html { redirect_to oper_nivelations_path(@oper), notice: 'Nivelation was successfully updated.' }\n        format.json { render :show, status: :ok, location: @nivelation }\n      else\n        format.html { render :edit }\n        format.json { render json: @nivelation.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /nivelations/1\n  # DELETE /nivelations/1.json\n  def destroy\n    @nivelation.destroy\n    respond_to do |format|\n      format.html { redirect_to oper_nivelations_url(@oper), notice: 'Nivelation was successfully destroyed.' }\n      format.json { head :no_content }\n    end\n  end\n\n  private\n    # Use callbacks to share common setup or constraints between actions.\n    def set_nivelation\n      @oper = Oper.find(params[:oper_id])\n      @nivelation = Nivelation.find(params[:id]) if params[:id]\n    end\n\n    # Never trust parameters from the scary internet, only allow the white list through.\n    def nivelation_params\n      params.require(:nivelation).permit(:oper_id, :operation_id, :desempeÃ±o, :comentario)\n    end\nend\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":6,"column":2},"end":{"row":6,"column":40},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1422566406948}